name: CI

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: lint
        uses: golangci/golangci-lint-action@v2.4.0
        with:
          version: latest
          args: --timeout 5m
          skip-go-installation: true

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        golang:
          - 1.16
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang }}
      - uses: actions/cache@v2.1.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.golang }}-
      - name: Run tests
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
  e2e:
    runs-on: ubuntu-latest
    services:
      vault:
        image: "vault:latest"
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: testtoken
    strategy:
      matrix:
        golang:
          - 1.16
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang }}
      - uses: actions/cache@v2.1.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.golang }}-
      - name: Run tests
        env:
          TGCONTRIB_VAULT_E2E_RUNNER: local_vault
          VAULT_ADDR: "http://localhost:8200"
          VAULT_TOKEN: "testtoken"
        run: go test -race -v -run ^TestE2E ./...